rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function hasRole(role) {
      return isAuthenticated() && 
             (exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             getUserData().role.lower() == role || 
             !exists(/databases/$(database)/documents/users/$(request.auth.uid)));  // Allow first user creation
    }

    function isAdmin() {
      return hasRole('admin') || 
             (request.auth != null && request.auth.token.email == 'admin@ams.com');
    }

    function isCoach() {
      return hasRole('coach');
    }

    function isAthlete() {
      return hasRole('athlete');
    }

    function isMedicalStaff() {
      return hasRole('medical_staff');
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function hasRequiredUserFields(data) {
      let requiredFields = ['email', 'name', 'role', 'createdAt', 'updatedAt', 'isActive', 'permissions'];
      return data.keys().hasAll(requiredFields);
    }

    function hasRequiredCredentialsFields(data) {
      let requiredFields = ['email', 'password', 'createdAt', 'updatedAt', 'isAdmin'];
      return data.keys().hasAll(requiredFields);
    }

    // Default rule - require authentication for all operations
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        isAdmin() ||
        isOwner(userId)
      );
      allow delete: if isAdmin();
    }

    // Medical Reports Collection
    match /medical_reports/{reportId} {
      allow read: if true;  // Temporarily allow all reads for testing
      allow write: if true; // Temporarily allow all writes for testing
    }

    // User Credentials Collection
    match /user_credentials/{email} {
      allow create: if isAuthenticated() && (
        isAdmin() || 
        !exists(/databases/$(database)/documents/users/$(request.auth.uid))  // Allow first user creation
      );
      allow read: if isAuthenticated() && (
        isAdmin() || 
        request.auth.token.email == email
      );
      allow update: if isAuthenticated() && (
        isAdmin() ||
        (request.auth.token.email == email && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['password', 'updatedAt']))
      );
      allow delete: if isAdmin();
    }

    // Roles Collection
    match /roles/{roleId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Announcements Collection
    match /announcements/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || (isCoach() && getUserData().permissions.manageAnnouncements == true);
    }

    // Athletes Collection
    match /athletes/{athleteId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || (isCoach() && getUserData().permissions.manageAthletes == true);
    }

    // Events Collection
    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || (isCoach() && getUserData().permissions.manageEvents == true);
    }

    // Budget Collections
    match /budget_analysis/{docId} {
      allow read: if isAuthenticated() && (isAdmin() || getUserData().permissions.viewBudget == true);
      allow write: if isAdmin() || (isAuthenticated() && getUserData().permissions.manageBudget == true);
    }

    match /budget_overview/{docId} {
      allow read: if isAuthenticated() && (isAdmin() || getUserData().permissions.viewBudget == true);
      allow write: if isAdmin() || (isAuthenticated() && getUserData().permissions.manageBudget == true);
    }

    match /budget_settings/{docId} {
      allow read: if isAuthenticated() && (isAdmin() || getUserData().permissions.viewBudget == true);
      allow write: if isAdmin() || (isAuthenticated() && getUserData().permissions.manageBudget == true);
    }

    match /budget_categories/{categoryId} {
      allow read: if isAuthenticated() && (isAdmin() || getUserData().permissions.viewBudget == true);
      allow write: if isAdmin() || (isAuthenticated() && getUserData().permissions.manageBudget == true);
    }

    // Audit Logs
    match /audit_logs/{logId} {
      allow read: if isAdmin() || (isAuthenticated() && getUserData().permissions.accessAuditLogs == true);
      allow write: if isAdmin();
    }

    // Performance Analysis Collection
    match /athletePerformanceAnalysis/{analysisId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Sport Metrics Collection
    match /sportMetrics/{metricId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
